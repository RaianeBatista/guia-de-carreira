// Servi√ßo simplificado para comunica√ß√£o com API StackSpot
// A autentica√ß√£o agora acontece no servidor via API route

export class StackSpotService {
  private static instance: StackSpotService;
  private sessionId: string | null = null;

  static getInstance(): StackSpotService {
    if (!StackSpotService.instance) {
      StackSpotService.instance = new StackSpotService();
    }
    return StackSpotService.instance;
  }

  // Gera um ID √∫nico para cada sess√£o da p√°gina (F5 = nova sess√£o)
  private getSessionId(): string {
    if (!this.sessionId) {
      this.sessionId = `session_${Date.now()}_${Math.random()
        .toString(36)
        .substring(7)}`;
      console.log("üÜï [CLIENT] Nova sess√£o iniciada:", this.sessionId);
    }
    return this.sessionId;
  }

  async sendMessage(message: string): Promise<string> {
    console.log(
      "üöÄ [CLIENT] Enviando mensagem para StackSpot Agent via API route"
    );
    console.log("üìù [CLIENT] Mensagem do usu√°rio:", message);

    const sessionId = this.getSessionId();
    console.log("üîë [CLIENT] Usando Session ID:", sessionId);

    try {
      // Envia para nossa API route no servidor (onde as credenciais est√£o seguras)
      const response = await fetch("/api/chat", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "X-Session-ID": sessionId, // Adiciona header com ID da sess√£o
        },
        body: JSON.stringify({ message }),
      });

      if (!response.ok) {
        const errorData = await response.json();
        console.error(
          "‚ùå [CLIENT] Erro na API route:",
          response.status,
          errorData
        );
        throw new Error(errorData.error || `Erro ${response.status}`);
      }

      const data = await response.json();
      console.log("‚úÖ [CLIENT] Resposta recebida:", data);

      // Mostra de onde veio a resposta para debug
      switch (data.source) {
        case "stackspot-agent":
          console.log(
            "üéØ [CLIENT] Resposta do seu agente personalizado StackSpot!"
          );
          console.log("ü§ñ [CLIENT] Agent ID usado:", data.agent_id);
          break;
        case "fallback":
          console.warn(
            "‚ö†Ô∏è [CLIENT] Usando resposta de fallback (credenciais n√£o configuradas no servidor)"
          );
          break;
        case "stackspot-error":
          console.error("‚ùå [CLIENT] Erro na API StackSpot no servidor");
          break;
        case "error-fallback":
          console.error("‚ùå [CLIENT] Erro geral no servidor, usando fallback");
          break;
      }

      return data.response;
    } catch (error) {
      console.error("‚ùå [CLIENT] ERRO ao comunicar com API route:", error);

      // Fallback local em caso de erro total na comunica√ß√£o
      return this.getLocalFallback(message);
    }
  }

  // Fallback local simplificado
  private getLocalFallback(message: string): string {
    console.warn(
      "‚ö†Ô∏è [CLIENT] Usando fallback local - problema na comunica√ß√£o com servidor"
    );

    const lowercaseMessage = message.toLowerCase();

    if (
      lowercaseMessage.includes("carreira") ||
      lowercaseMessage.includes("profissional")
    ) {
      return `[FALLBACK LOCAL] Sobre desenvolvimento de carreira: √â importante focar no aprendizado cont√≠nuo e networking. Para sua pergunta sobre "${message}", recomendo come√ßar identificando suas principais habilidades e √°reas de interesse.`;
    }

    if (
      lowercaseMessage.includes("tecnologia") ||
      lowercaseMessage.includes("programa√ß√£o")
    ) {
      return `[FALLBACK LOCAL] Na √°rea de tecnologia, √© essencial manter-se atualizado. Sugiro focar em: 1) Fundamentos s√≥lidos, 2) Pr√°tica constante, 3) Contribui√ß√µes open source, 4) Networking na comunidade tech.`;
    }

    return `[FALLBACK LOCAL] Obrigado pela sua pergunta sobre "${message}". Como especialista em orienta√ß√£o de carreira, posso te ajudar com desenvolvimento profissional, planejamento de carreira, transi√ß√µes e habilidades t√©cnicas. Configure as credenciais StackSpot para respostas personalizadas.`;
  }

  // Limpa qualquer cache (n√£o necess√°rio mais, mas mantido para compatibilidade)
  clearAuth(): void {
    console.log(
      "üßπ [CLIENT] Cache limpo (autentica√ß√£o agora √© feita no servidor)"
    );
  }
}

export default StackSpotService;
